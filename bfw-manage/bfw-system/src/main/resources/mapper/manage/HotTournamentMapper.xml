<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bfw.manage.mapper.HotTournamentMapper">
    
    <resultMap type="HotTournament" id="HotTournamentResult">
        <result property="hotId"    column="hot_id"    />
        <result property="tournamentId"    column="tournament_id"    />
        <result property="display"    column="display"    />
        <result property="sort"    column="sort"    />
        <result property="status"    column="status"    />
        <result property="origin"    column="origin"    />
        <result property="type"    column="type"    />
        <result property="createdAt"    column="created_at"    />
        <result property="updatedAt"    column="updated_at"    />
    </resultMap>

    <sql id="selectHotTournamentVo">
        select hot_id, tournament_id, display, sort, status, origin, type, created_at, updated_at from hot_tournament
    </sql>

    <sql id="selectHotVo">
        select a.hot_id hotId, a.display, a.sort, a.status, a.origin, a.type, b.cn_name cnName from hot_tournament a
        left join s_tournament b on b.id=a.tournament_id
    </sql>

    <select id="selectHotTournamentList" parameterType="HotTournament" resultMap="HotTournamentResult">
        <include refid="selectHotTournamentVo"/>
        <where>  
            <if test="tournamentId != null "> and tournament_id = #{tournamentId}</if>
            <if test="display != null "> and display = #{display}</if>
            <if test="sort != null "> and sort = #{sort}</if>
            <if test="status != null "> and status = #{status}</if>
            <if test="origin != null "> and origin = #{origin}</if>
            <if test="type != null "> and type = #{type}</if>
            <if test="createdAt != null "> and created_at = #{createdAt}</if>
            <if test="updatedAt != null "> and updated_at = #{updatedAt}</if>
        </where>
    </select>

    <select id="selectHotList" parameterType="HotTournament" resultType="com.bfw.manage.domain.HotTournamentExt">
        <include refid="selectHotVo"/>
        <where>
            <if test="tournamentId != null "> and tournament_id = #{tournamentId}</if>
            <if test="display != null "> and display = #{display}</if>
            <if test="sort != null "> and sort = #{sort}</if>
            <if test="status != null "> and status = #{status}</if>
            <if test="origin != null "> and origin = #{origin}</if>
            <if test="type != null "> and type = #{type}</if>
            <if test="createdAt != null "> and created_at = #{createdAt}</if>
            <if test="updatedAt != null "> and updated_at = #{updatedAt}</if>
        </where>
    </select>

    <select id="selectTournamentList" parameterType="Integer" resultType="com.bfw.manage.domain.TournamentExt">
        SELECT id, logo_url logoUrl, cn_name NAME FROM s_tournament WHERE category_id = #{categoryId}
    </select>

    <select id="selectCategoryList" parameterType="String" resultType="com.bfw.manage.domain.CategoryExt">
        SELECT id, cn_name cnName FROM s_category WHERE sport_id=1
        <if test="continent != null ">
        and continent = #{continent}
        </if>
    </select>
    
    <select id="selectHotTournamentById" parameterType="Long" resultMap="HotTournamentResult">
        <include refid="selectHotTournamentVo"/>
        where hot_id = #{hotId}
    </select>
        
    <insert id="insertHotTournament" parameterType="HotTournament" useGeneratedKeys="true" keyProperty="hotId">
        insert into hot_tournament
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="tournamentId != null ">tournament_id,</if>
            <if test="display != null ">display,</if>
            <if test="sort != null ">sort,</if>
            <if test="status != null ">status,</if>
            <if test="origin != null ">origin,</if>
            <if test="type != null ">type,</if>
            <if test="createdAt != null ">created_at,</if>
            <if test="updatedAt != null ">updated_at,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="tournamentId != null ">#{tournamentId},</if>
            <if test="display != null ">#{display},</if>
            <if test="sort != null ">#{sort},</if>
            <if test="status != null ">#{status},</if>
            <if test="origin != null ">#{origin},</if>
            <if test="type != null ">#{type},</if>
            <if test="createdAt != null ">#{createdAt},</if>
            <if test="updatedAt != null ">#{updatedAt},</if>
         </trim>
    </insert>

    <update id="updateHotTournament" parameterType="HotTournament">
        update hot_tournament
        <trim prefix="SET" suffixOverrides=",">
            <if test="tournamentId != null ">tournament_id = #{tournamentId},</if>
            <if test="display != null ">display = #{display},</if>
            <if test="sort != null ">sort = #{sort},</if>
            <if test="status != null ">status = #{status},</if>
            <if test="origin != null ">origin = #{origin},</if>
            <if test="type != null ">type = #{type},</if>
            <if test="createdAt != null ">created_at = #{createdAt},</if>
            <if test="updatedAt != null ">updated_at = #{updatedAt},</if>
        </trim>
        where hot_id = #{hotId}
    </update>

    <delete id="deleteHotTournamentById" parameterType="Long">
        delete from hot_tournament where hot_id = #{hotId}
    </delete>

    <delete id="deleteHotTournamentByIds" parameterType="String">
        delete from hot_tournament where hot_id in 
        <foreach item="hotId" collection="array" open="(" separator="," close=")">
            #{hotId}
        </foreach>
    </delete>
    
</mapper>